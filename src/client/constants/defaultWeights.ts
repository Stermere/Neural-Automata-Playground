export const worms: number[][][][] = [
  [
    [
      [1, 1, 0, 0, 0],
      [1, -1, 0, 0, 0],
      [0, 0, 0, 2, 2],
      [-2, -2, 0, 0, 1],
      [0, 0, 0, 1, 1]
    ],
    [
      [0, 0, -2, 0, 0],
      [0, 1, 2, 1, 0],
      [-2, 2, -8, 2, -2],
      [0, 1, 2, 1, 0],
      [0, 0, -2, 0, 0]
    ],
    [
      [1, 1, 1, 1, 1],
      [1, -1, -1, -1, 1],
      [1, -1, 1, -1, 1],
      [1, -1, -1, -1, 1],
      [1, 1, 1, 1, 1]
    ]
  ],
  [
    [
      [-1, -1, -1, -1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, -10, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, -1, -1, -1, -1]
    ],
    [
      [-1, 0, 0, 0, 0],
      [0, 2, -1, 0, 0],
      [0, -1, -2, 0, 0],
      [0, 0, 0, 1, 1],
      [-1, 0, 0, 1, 2]
    ],
    [
      [-6, 0, 1, 0, -6],
      [0, 1, 5, 1, 0],
      [1, 5, 2, 2, 1],
      [0, 1, 2, 1, 0],
      [-14, 0, 1, 0, -6]
    ]
  ],
  [
    [
      [0, 0, 1, 0, 0],
      [0, 1, 2, 1, 0],
      [1, 2, -8, 2, 1],
      [0, 1, 2, 1, 0],
      [0, 0, 1, 0, 0]
    ],
    [
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
      [-1, -1, 1, -1, -1],
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1]
    ],
    [
      [1, 1, 0, 12, 10.9],
      [1, 0, 0, 10, 12],
      [0, 0, -8, 2, 0],
      [0, 0, 2, 2, 0],
      [-7, 0, 0, 0, -1]
    ]
  ]
];

export const matrix2 = [
  // Output R
  [
    // Input R
    [
      [1, 1, 0, 0, 0],
      [1, -3, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 1],
      [0, 0, 0, 1, 1],
    ],
    // Input G
    [
      [ 0,  0,  -2,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ -2,  2, -8, 2, -2],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  -2,  0,  0],
    ],
    // Input B
    [
      [1, 1, 1, 1, 1],
      [1, -1, -1, -1, 1],
      [1, -1, 1, -1, 1],
      [1, -1, -1, -1, 1],
      [1, 1, 1, 1, 1],
    ],
  ],

  // Output G
  [
    // Input R
    [
      [-1, -1, -1, -1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, -1, -1, -1, -1],
    ],
    // Input G
    [
      [-1, 0, 0, 0, 0],
      [0, 2, -1, 0, 0],
      [0, -1, 1, 0, 0],
      [0, 0, 0, 0, 1],
      [0, 0, 0, 1, 1],
    ],
    // Input B
    [
      [ 0,  0,  1,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ 1,  2, -25, 2,  1],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  1,  0,  0],
    ],
  ],

  // Output B
  [
    // Input R
    [
      [ 0,  0,  1,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ 1,  2, -8,  2,  1],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  1,  0,  0],
    ],
    // Input G
    [
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
      [-1, -1, 0, -1, -1],
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
    ],
    // Input B
    [
      [1, 1, 0, 0, -2.1],
      [1, 0, 0, 0, 0],
      [0, 0, 2, 2, 0],
      [0, 0, 2, 2, 0],
      [0, 0, 0, 0, -1],
    ],
  ],
];

// Cool weights
export const matrix = [
  // Output R
  [
    // Input R
    [
      [1, 1, 0, 0, 0],
      [1, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 1],
      [0, 0, 0, 1, 1],
    ],
    // Input G
    [
      [ 0,  0,  -2,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ -2,  2, -8, 2, -2],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  -2,  0,  0],
    ],
    // Input B
    [
      [1, 1, 1, 1, 1],
      [1, -1, -1, -1, 1],
      [1, -1, 1, -1, 1],
      [1, -1, -1, -1, 1],
      [1, 1, 1, 1, 1],
    ],
  ],

  // Output G
  [
    // Input R
    [
      [-1, -1, -1, -1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, -1, -1, -1, -1],
    ],
    // Input G
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 1],
      [0, 0, 0, 1, 1],
    ],
    // Input B
    [
      [ 0,  0,  1,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ 1,  2, -25, 2,  1],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  1,  0,  0],
    ],
  ],

  // Output B
  [
    // Input R
    [
      [ 0,  0,  1,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ 1,  2, -8, 2,  1],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  1,  0,  0],
    ],
    // Input G
    [
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
      [-1, -1, -1, -1, -1],
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
    ],
    // Input B
    [
      [1, 1, 0, 0, 0],
      [1, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
  ],
];

// Game Of Life
export const gameOfLife = [
  // Output R
  [
    // Input R
    [
      [0, 0, 0, 0, 0],
      [0, 1, 1, 1, 0],
      [0, 1, 8, 1, 0],
      [0, 1, 1, 1, 0],
      [0, 0, 0, 0, 0],
    ],
    // Input G
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
    // Input B
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
  ],

  // Output G
  [
    [
      [0, 0, 0, 0, 0],
      [0, 1, 1, 1, 0],
      [0, 1, 8, 1, 0],
      [0, 1, 1, 1, 0],
      [0, 0, 0, 0, 0],
    ],
    // Input G
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
    // Input B
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
  ],

  // Output B
  [
    // Input R
    [
      [0, 0, 0, 0, 0],
      [0, 1, 1, 1, 0],
      [0, 1, 8, 1, 0],
      [0, 1, 1, 1, 0],
      [0, 0, 0, 0, 0],
    ],
    // Input G
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
    // Input B
    [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ],
  ],
];

// Wave
export const wave = [
  // Output R
  [
    // Input R
    [
      [1, 1, 0, 0, 0],
      [1, -3, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 1],
      [0, 0, 0, 1, 1],
    ],
    // Input G
    [
      [ 0,  0,  -2,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ -2,  2, -8, 2, -2],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  -2,  0,  0],
    ],
    // Input B
    [
      [1, 1, 1, 1, 1],
      [1, -1, -1, -1, 1],
      [1, -1, 1, -1, 1],
      [1, -1, -1, -1, 1],
      [1, 1, 1, 1, 1],
    ],
  ],

  // Output G
  [
    // Input R
    [
      [-1, -1, -1, -1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, 1, 1, 1, -1],
      [-1, -1, -1, -1, -1],
    ],
    // Input G
    [
      [-1, 0, 0, 0, 0],
      [0, 2, -1, 0, 0],
      [0, -1, 1, 0, 0],
      [0, 0, 0, 0, 1],
      [0, 0, 0, 1, 1],
    ],
    // Input B
    [
      [ 0,  0,  1,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ 1,  2, -25, 2,  1],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  1,  0,  0],
    ],
  ],

  // Output B
  [
    // Input R
    [
      [ 0,  0,  1,  0,  0],
      [ 0,  1,  2,  1,  0],
      [ 1,  2, -8,  2,  1],
      [ 0,  1,  2,  1,  0],
      [ 0,  0,  1,  0,  0],
    ],
    // Input G
    [
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
      [-1, -1, -1, -1, -1],
      [1, 1, -1, 1, 1],
      [1, 1, -1, 1, 1],
    ],
    // Input B
    [
      [1, 1, 0, 0, -5],
      [1, 0, 0, 0, 0],
      [0, 0, 1, 4, 0],
      [0, 0, 4, 2, 0],
      [5, 0, 0, 0, -1],
    ],
  ],
];